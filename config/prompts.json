{
  "qianwen": {
    "architecture": "作为AWS解决方案架构师，请根据以下需求设计简洁的AWS架构方案。考虑AWS Well-Architected Framework的关键原则。\n\n系统需求:\n{0}\n\n请提供以下内容(简明扼要):\n1. 架构概述：简要描述整体架构设计(50-100字)\n2. 架构组件：列出核心AWS服务及用途(每项15-30字)\n3. 架构图：使用文本描述架构图的组件和连接关系\n4. 设计决策：3-5条关键设计决策(每条20-40字)\n5. 最佳实践：3-5条应用的AWS最佳实践(每条15-30字)\n\n重要：在components和diagram_description中的name字段不能包含方括号[]、圆括号()等特殊字符，以确保生成的图表正确显示。\n\n对于架构组件，必须使用以下AWS服务类型之一作为service_type字段的值：\nEC2, Lambda, ECS, Fargate, EKS, ElasticBeanstalk, RDS, DynamoDB, ElastiCache, Aurora, Redshift, \nVPC, ELB, ALB, NLB, CloudFront, Route53, APIGateway, S3, EFS, EBS, IAM, Cognito, WAF, Shield, \nSQS, SNS, EventBridge, CloudWatch, CloudTrail, CloudFormation\n\n对于架构图描述，使用以下JSON格式:\n- nodes: 节点数组，每个节点包含id、type和name，其中type必须是上述AWS服务类型之一\n- connections: 连接数组，每个连接包含from、to和label\n\n请直接返回JSON格式结果，包含以下字段:\n- architecture_overview: 架构概述\n- components: 架构组件列表，每个组件包含name、service_type、description字段\n- diagram_description: 架构图描述，包含nodes和connections\n- design_decisions: 设计决策列表\n- best_practices: 最佳实践列表\n\n示例格式:\n{\n  \"architecture_overview\": \"这是一个基于AWS的Web应用架构，使用EC2实例运行Web服务，Cognito进行用户认证，数据存储在DynamoDB中。该架构具有高可用性和可扩展性，适合处理变化的负载需求。\",\n  \"components\": [\n    {\n      \"name\": \"Web服务器\",\n      \"service_type\": \"EC2\",\n      \"description\": \"运行Web应用的EC2实例\"\n    },\n    {\n      \"name\": \"用户认证服务\",\n      \"service_type\": \"Cognito\",\n      \"description\": \"管理用户身份验证和授权\"\n    },\n    {\n      \"name\": \"数据存储\",\n      \"service_type\": \"DynamoDB\",\n      \"description\": \"存储应用数据的NoSQL数据库\"\n    }\n  ],\n  \"diagram_description\": {\n    \"nodes\": [\n      {\"id\": \"web\", \"type\": \"EC2\", \"name\": \"Web服务器\"},\n      {\"id\": \"auth\", \"type\": \"Cognito\", \"name\": \"用户认证服务\"},\n      {\"id\": \"db\", \"type\": \"DynamoDB\", \"name\": \"数据存储\"}\n    ],\n    \"connections\": [\n      {\"from\": \"web\", \"to\": \"auth\", \"label\": \"认证请求\"},\n      {\"from\": \"web\", \"to\": \"db\", \"label\": \"数据操作\"}\n    ]\n  },\n  \"design_decisions\": [\n    \"使用EC2实例运行Web应用以提供灵活的配置和控制能力\",\n    \"选择Cognito进行用户认证以减少开发工作量并提高安全性\",\n    \"采用DynamoDB作为数据存储以获得高可用性和自动扩展能力\"\n  ],\n  \"best_practices\": [\n    \"实施自动扩展以应对流量变化\",\n    \"使用IAM角色管理服务间权限\",\n    \"配置CloudWatch监控关键指标\"\n  ]\n}\n\n注意：确保所有service_type和type字段都使用上述列出的AWS服务类型，不要使用\"Service\"或其他通用类型。\n重要：在components和diagram_description中的name字段不能包含方括号[]、圆括号()等特殊字符，以确保生成的图表正确显示。",
    "adjustment": "作为AWS解决方案架构师，请根据以下信息简洁调整现有AWS架构方案。\n\n{0}\n\n请提供调整后的架构设计，包含以下内容(简明扼要):\n1. 架构概述：简要描述调整后的架构设计(50-100字)\n2. 架构组件：列出核心AWS服务，重点说明新增、修改或删除的组件\n3. 架构图：使用文本描述架构图的组件和连接关系\n4. 设计决策：3-5条关键设计决策，特别是与原架构的差异\n5. 最佳实践：3-5条应用的AWS最佳实践\n\n重要：在components和diagram_description中的name字段不能包含方括号[]、圆括号()等特殊字符，以确保生成的图表正确显示。\n\n对于架构组件，必须使用以下AWS服务类型之一作为service_type字段的值：\nEC2, Lambda, ECS, Fargate, EKS, ElasticBeanstalk, RDS, DynamoDB, ElastiCache, Aurora, Redshift, \nVPC, ELB, ALB, NLB, CloudFront, Route53, APIGateway, S3, EFS, EBS, IAM, Cognito, WAF, Shield, \nSQS, SNS, EventBridge, CloudWatch, CloudTrail, CloudFormation\n\n对于架构图描述，使用以下JSON格式:\n- nodes: 节点数组，每个节点包含id、type和name，其中type必须是上述AWS服务类型之一\n- connections: 连接数组，每个连接包含from、to和label\n\n请直接返回JSON格式结果，包含以下字段:\n- architecture_overview: 架构概述\n- components: 架构组件列表，每个组件包含name、service_type、description字段\n- diagram_description: 架构图描述，包含nodes和connections\n- design_decisions: 设计决策列表\n- best_practices: 最佳实践列表\n\n示例格式:\n{\n  \"architecture_overview\": \"调整后的架构增加了负载均衡和自动扩展能力，提高了系统的可用性和性能。新增了CloudFront内容分发网络加速静态内容交付，并使用RDS替代了原有的数据库解决方案以提升数据管理能力。\",\n  \"components\": [\n    {\n      \"name\": \"Web服务器集群\",\n      \"service_type\": \"EC2\",\n      \"description\": \"运行Web应用的EC2实例集群\"\n    },\n    {\n      \"name\": \"负载均衡器\",\n      \"service_type\": \"ALB\",\n      \"description\": \"分发流量到Web服务器集群\"\n    },\n    {\n      \"name\": \"用户认证服务\",\n      \"service_type\": \"Cognito\",\n      \"description\": \"管理用户身份验证和授权\"\n    },\n    {\n      \"name\": \"关系数据库\",\n      \"service_type\": \"RDS\",\n      \"description\": \"存储应用结构化数据\"\n    },\n    {\n      \"name\": \"内容分发网络\",\n      \"service_type\": \"CloudFront\",\n      \"description\": \"加速静态内容交付\"\n    }\n  ],\n  \"diagram_description\": {\n    \"nodes\": [\n      {\"id\": \"cf\", \"type\": \"CloudFront\", \"name\": \"内容分发网络\"},\n      {\"id\": \"alb\", \"type\": \"ALB\", \"name\": \"负载均衡器\"},\n      {\"id\": \"web\", \"type\": \"EC2\", \"name\": \"Web服务器集群\"},\n      {\"id\": \"auth\", \"type\": \"Cognito\", \"name\": \"用户认证服务\"},\n      {\"id\": \"db\", \"type\": \"RDS\", \"name\": \"关系数据库\"}\n    ],\n    \"connections\": [\n      {\"from\": \"cf\", \"to\": \"alb\", \"label\": \"动态内容请求\"},\n      {\"from\": \"alb\", \"to\": \"web\", \"label\": \"负载均衡\"},\n      {\"from\": \"web\", \"to\": \"auth\", \"label\": \"认证请求\"},\n      {\"from\": \"web\", \"to\": \"db\", \"label\": \"数据操作\"}\n    ]\n  },\n  \"design_decisions\": [\n    \"引入ALB实现负载均衡，提高系统可用性和扩展性\",\n    \"使用CloudFront加速静态内容交付，改善全球用户访问体验\",\n    \"从DynamoDB迁移到RDS，以支持更复杂的查询和事务需求\"\n  ],\n  \"best_practices\": [\n    \"实施多可用区部署以提高系统可用性\",\n    \"配置自动扩展组应对流量变化\",\n    \"使用RDS读取副本分担数据库读取负载\"\n  ]\n}\n\n注意：确保所有service_type和type字段都使用上述列出的AWS服务类型，不要使用\"Service\"或其他通用类型。\n重要：在components和diagram_description中的name字段不能包含方括号[]、圆括号()等特殊字符，以确保生成的图表正确显示。"
  },
  "gemini": {
    "architecture": "作为AWS解决方案架构师，请根据以下需求设计简洁的AWS架构方案。考虑AWS Well-Architected Framework的关键原则。\n\n系统需求:\n{0}\n\n请提供以下内容(简明扼要):\n1. 架构概述：简要描述整体架构设计(50-100字)\n2. 架构组件：列出核心AWS服务及用途(每项15-30字)\n3. 架构图：使用文本描述架构图的组件和连接关系\n4. 设计决策：3-5条关键设计决策(每条20-40字)\n5. 最佳实践：3-5条应用的AWS最佳实践(每条15-30字)\n\n重要：在components和diagram_description中的name字段不能包含方括号[]、圆括号()等特殊字符，以确保生成的图表正确显示。\n\n对于架构组件，必须使用以下AWS服务类型之一作为service_type字段的值：\nEC2, Lambda, ECS, Fargate, EKS, ElasticBeanstalk, RDS, DynamoDB, ElastiCache, Aurora, Redshift, \nVPC, ELB, ALB, NLB, CloudFront, Route53, APIGateway, S3, EFS, EBS, IAM, Cognito, WAF, Shield, \nSQS, SNS, EventBridge, CloudWatch, CloudTrail, CloudFormation\n\n请直接返回JSON格式结果，包含以下字段:\n- architecture_overview: 架构概述\n- components: 架构组件列表，每个组件包含name、service_type、description字段\n- diagram_description: 架构图描述，包含nodes和connections\n- design_decisions: 设计决策列表\n- best_practices: 最佳实践列表\n\n示例格式:\n{\n  \"architecture_overview\": \"这是一个基于AWS的Web应用架构，使用EC2实例运行Web服务，Cognito进行用户认证，数据存储在DynamoDB中。该架构具有高可用性和可扩展性，适合处理变化的负载需求。\",\n  \"components\": [\n    {\n      \"name\": \"Web服务器\",\n      \"service_type\": \"EC2\",\n      \"description\": \"运行Web应用的EC2实例\"\n    },\n    {\n      \"name\": \"用户认证服务\",\n      \"service_type\": \"Cognito\",\n      \"description\": \"管理用户身份验证和授权\"\n    },\n    {\n      \"name\": \"数据存储\",\n      \"service_type\": \"DynamoDB\",\n      \"description\": \"存储应用数据的NoSQL数据库\"\n    }\n  ],\n  \"diagram_description\": {\n    \"nodes\": [\n      {\"id\": \"web\", \"type\": \"EC2\", \"name\": \"Web服务器\"},\n      {\"id\": \"auth\", \"type\": \"Cognito\", \"name\": \"用户认证服务\"},\n      {\"id\": \"db\", \"type\": \"DynamoDB\", \"name\": \"数据存储\"}\n    ],\n    \"connections\": [\n      {\"from\": \"web\", \"to\": \"auth\", \"label\": \"认证请求\"},\n      {\"from\": \"web\", \"to\": \"db\", \"label\": \"数据操作\"}\n    ]\n  },\n  \"design_decisions\": [\n    \"使用EC2实例运行Web应用以提供灵活的配置和控制能力\",\n    \"选择Cognito进行用户认证以减少开发工作量并提高安全性\",\n    \"采用DynamoDB作为数据存储以获得高可用性和自动扩展能力\"\n  ],\n  \"best_practices\": [\n    \"实施自动扩展以应对流量变化\",\n    \"使用IAM角色管理服务间权限\",\n    \"配置CloudWatch监控关键指标\"\n  ]\n}\n\n注意：确保所有service_type和type字段都使用上述列出的AWS服务类型，不要使用\"Service\"或其他通用类型。\n重要：在components和diagram_description中的name字段不能包含方括号[]、圆括号()等特殊字符，以确保生成的图表正确显示。",
    "adjustment": "作为AWS解决方案架构师，请根据以下信息简洁调整现有AWS架构方案。\n\n{0}\n\n请提供调整后的架构设计，包含以下内容(简明扼要):\n1. 架构概述：简要描述调整后的架构设计(50-100字)\n2. 架构组件：列出核心AWS服务，重点说明新增、修改或删除的组件\n3. 架构图：使用文本描述架构图的组件和连接关系\n4. 设计决策：3-5条关键设计决策，特别是与原架构的差异\n5. 最佳实践：3-5条应用的AWS最佳实践\n\n重要：在components和diagram_description中的name字段不能包含方括号[]、圆括号()等特殊字符，以确保生成的图表正确显示。\n\n对于架构组件，必须使用以下AWS服务类型之一作为service_type字段的值：\nEC2, Lambda, ECS, Fargate, EKS, ElasticBeanstalk, RDS, DynamoDB, ElastiCache, Aurora, Redshift, \nVPC, ELB, ALB, NLB, CloudFront, Route53, APIGateway, S3, EFS, EBS, IAM, Cognito, WAF, Shield, \nSQS, SNS, EventBridge, CloudWatch, CloudTrail, CloudFormation\n\n对于架构图描述，使用以下JSON格式:\n- nodes: 节点数组，每个节点包含id、type和name，其中type必须是上述AWS服务类型之一\n- connections: 连接数组，每个连接包含from、to和label\n\n请直接返回JSON格式结果，包含以下字段:\n- architecture_overview: 架构概述\n- components: 架构组件列表，每个组件包含name、service_type、description字段\n- diagram_description: 架构图描述，包含nodes和connections\n- design_decisions: 设计决策列表\n- best_practices: 最佳实践列表\n\n示例格式:\n{\n  \"architecture_overview\": \"调整后的架构增加了负载均衡和自动扩展能力，提高了系统的可用性和性能。新增了CloudFront内容分发网络加速静态内容交付，并使用RDS替代了原有的数据库解决方案以提升数据管理能力。\",\n  \"components\": [\n    {\n      \"name\": \"Web服务器集群\",\n      \"service_type\": \"EC2\",\n      \"description\": \"运行Web应用的EC2实例集群\"\n    },\n    {\n      \"name\": \"负载均衡器\",\n      \"service_type\": \"ALB\",\n      \"description\": \"分发流量到Web服务器集群\"\n    },\n    {\n      \"name\": \"用户认证服务\",\n      \"service_type\": \"Cognito\",\n      \"description\": \"管理用户身份验证和授权\"\n    },\n    {\n      \"name\": \"关系数据库\",\n      \"service_type\": \"RDS\",\n      \"description\": \"存储应用结构化数据\"\n    },\n    {\n      \"name\": \"内容分发网络\",\n      \"service_type\": \"CloudFront\",\n      \"description\": \"加速静态内容交付\"\n    }\n  ],\n  \"diagram_description\": {\n    \"nodes\": [\n      {\"id\": \"cf\", \"type\": \"CloudFront\", \"name\": \"内容分发网络\"},\n      {\"id\": \"alb\", \"type\": \"ALB\", \"name\": \"负载均衡器\"},\n      {\"id\": \"web\", \"type\": \"EC2\", \"name\": \"Web服务器集群\"},\n      {\"id\": \"auth\", \"type\": \"Cognito\", \"name\": \"用户认证服务\"},\n      {\"id\": \"db\", \"type\": \"RDS\", \"name\": \"关系数据库\"}\n    ],\n    \"connections\": [\n      {\"from\": \"cf\", \"to\": \"alb\", \"label\": \"动态内容请求\"},\n      {\"from\": \"alb\", \"to\": \"web\", \"label\": \"负载均衡\"},\n      {\"from\": \"web\", \"to\": \"auth\", \"label\": \"认证请求\"},\n      {\"from\": \"web\", \"to\": \"db\", \"label\": \"数据操作\"}\n    ]\n  },\n  \"design_decisions\": [\n    \"引入ALB实现负载均衡，提高系统可用性和扩展性\",\n    \"使用CloudFront加速静态内容交付，改善全球用户访问体验\",\n    \"从DynamoDB迁移到RDS，以支持更复杂的查询和事务需求\"\n  ],\n  \"best_practices\": [\n    \"实施多可用区部署以提高系统可用性\",\n    \"配置自动扩展组应对流量变化\",\n    \"使用RDS读取副本分担数据库读取负载\"\n  ]\n}\n\n注意：确保所有service_type和type字段都使用上述列出的AWS服务类型，不要使用\"Service\"或其他通用类型。\n重要：在components和diagram_description中的name字段不能包含方括号[]、圆括号()等特殊字符，以确保生成的图表正确显示。"
  }
}